#!/usr/bin/env bash

source /usr/local/vesta/func/helpers.sh

repo_url="$1"

plugin_name="$(basename -- "$repo_url")"
plugin_path="/usr/local/vesta/plugins/$plugin_name"

if [[ -d "$repo_url" ]]; then
    repo_type="path"
else
    repo_type="github"
    repo_url="$(echo "$repo_url" | sed -E "s|.git$||")"

    if [[ ! "$(echo "$repo_url" | grep -E "^https://github.com/[^/]*/[^/]*$")" ]]; then
        echo "Invalida github URL"
        exit
    elif [[ ! "$(curl -L -I -s "$repo_url" | grep -E "HTTP/(.*)200")" ]]; then
        echo "Github repository not found"
        exit
    fi

    # Archive link
    zip_link="$repo_url/archive/master.zip"
fi

mkdir -p /usr/local/vesta/plugins
mkdir -p /usr/local/vesta/web/plugins

if [[ -d "$plugin_path" ]]; then
    echo "There is already a plugin with that name"
    exit 1
fi

if [[ "$repo_type" == "path" ]]; then
    ln -sf "$repo_url" /usr/local/vesta/plugins/
else
    # Check repository
    if [[ ! "$(curl -L -I -s "$zip_link" | grep -E "HTTP/(.*)200")" \
        || ! "$(curl -L -I -s "$zip_link" | grep -E "Content-Type: application/zip")" ]]; then
        echo "Not found" >&2
        exit
    fi

    # Download and installation
    curl -L -J "$zip_link" -o "/tmp/$plugin_name.zip"
    rm -rf "/tmp/$plugin_name-master"
    unzip "/tmp/$plugin_name.zip" -d "/tmp"
    mv "/tmp/$plugin_name-master" "/usr/local/vesta/plugins/$plugin_name"
    rm -rf "/tmp/$plugin_name.zip"
fi

# Check installation
if [[ "$(ls -A "/usr/local/vesta/plugins/$plugin_name")" ]]; then
    # Get plugin data and add installation info
    plugin_data="$( get_json "/usr/local/vesta/plugins/$plugin_name/plugin.json")"
    plugin_data="$(echo "$plugin_data" | jq -r ".name = \"$plugin_name\" | .repository = \"$repo_url\" | .date = \"$(date +'%Y-%m-%d %H:%M:%S')\"")"

    # Check if plugin exist in vesta list to keep additional configurations
    current_plugin_data="$(get_json_index "$plugin_name" /usr/local/vesta/conf/plugins.json)"
    if [[ "$current_plugin_data" && "$current_plugin_data" != "null" ]]; then
        # Remove "disabled" index
        current_plugin_data="$(delete_json_index "disabled" "$current_plugin_data")"
        # Merge data
        plugin_data="$(echo "$current_plugin_data $plugin_data" | jq -s ".[0] + .[1]")"
    fi

    # Update vesta plugins list
    update_json_index "$plugin_name" "$plugin_data" /usr/local/vesta/conf/plugins.json

    # Execute configuration for plugin in the vesta environment
    /usr/local/vesta/bin/v-rebuild-plugin "$plugin_name"

    # Check if plugin has additional configurations
    if [[ -f "$plugin_path/install.sh" ]]; then
        bash "$plugin_path/install.sh"
    fi

    echo -e "\nInstallation completed"
else
    rm -rf "/usr/local/vesta/plugins/$plugin_name"
fi
