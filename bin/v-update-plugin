#!/usr/bin/env bash

source /usr/local/vesta/plugin-manager/func/plugins.sh

plugin_name="$1"

plugin_conf="$(/usr/local/vesta/plugin-manager/bin/v-list-plugin "$plugin_name" plain)"

if [[ ! "$plugin_name" ]]; then
    echo "Invalid arguments"
    exit 1
elif [[ ! "$plugin_conf" ]]; then
    echo "Plugin does not exist"
    exit 1
fi

# Reinstall from the same source as the current plugin
plugin_repo="$(echo "$plugin_conf" | awk '{print $3}')"

if [[ ! "$plugin_repo" || "$plugin_repo" == "null" ]]; then
    echo "Plugin $plugin_name don't have a repository defined to perform the update."
    exit 1
fi

# Check update
new_version="$(check_update "$plugin_name")"
if [[ ! "$new_version" ]]; then
    echo "Plugins $plugin_name is already updated."
    exit 1
fi

# Install from Github repository
github_archive="$(get_from_github "$plugin_repo" "archive")"

if [[ "$github_archive" ]]; then
    echo "Updating $plugin_name plugin to version $new_version"

    # Check pre_update hook
    if [[ -f "/usr/local/vesta/plugins/$plugin_name/hook/pre_update" ]]; then
        bash "/usr/local/vesta/plugins/$plugin_name/hook/pre_update"
    fi

    # Disable plugin
    /usr/local/vesta/plugin-manager/bin/v-disable-plugin "$plugin_name"

    install_from_zip "$github_archive" "yes"

    # Check post_update hook
    if [[ -f "/usr/local/vesta/plugins/$plugin_name/hook/post_update" ]]; then
        bash "/usr/local/vesta/plugins/$plugin_name/hook/post_update"
    fi
fi
