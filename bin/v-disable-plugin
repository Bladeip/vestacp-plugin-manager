#!/usr/bin/env bash

source /usr/local/vesta/plugin-manager/func/helpers.sh

plugin_name="$(echo "$1" | awk '{gsub(/^[ \t]+| [ \t]+$/,""); print $0 }')"

plugin_path="/usr/local/vesta/plugins/$plugin_name"
plugin_conf="$(/usr/local/vesta/plugin-manager/bin/v-list-plugin "$plugin_name" plain)"

if [[ ! "$plugin_name" ]]; then
    echo "Invalid arguments"
    exit 1
elif [[ ! -d "$plugin_path" ]]; then
    echo "Plugin \"$plugin_name\" is not installed"
    exit 1
elif [[ "$(echo "$plugin_conf" | awk '{print $4}')" != "true" ]]; then
    echo "Plugin \"$plugin_name\" already disabled"
    exit 1
fi

# Check if plugin has an uninstall script
if [[ -f "$plugin_path/hook/pre_disable" ]]; then
    bash "$plugin_path/hook/pre_disable"
fi

# Remove CLI files
if [[ -d "$plugin_path/bin" ]]; then
    for f in "$plugin_path/bin/"*; do
        bin_name="$(basename -- "$f")"

        if [[ -L "/usr/local/vesta/bin/$bin_name" ]]; then
            unlink "/usr/local/vesta/bin/$bin_name"
        fi
    done
fi

# Remove from web
if [[ -L "/usr/local/vesta/web/plugin/$plugin_name" ]]; then
    unlink "/usr/local/vesta/web/plugin/$plugin_name"
fi

# Change plugin status
plugin_data="$(get_json_index "$plugin_name" /usr/local/vesta/conf/plugins.json)"
plugin_data="$(update_json_index "enabled" "false" "$plugin_data")"
update_json_index "$plugin_name" "$plugin_data" /usr/local/vesta/conf/plugins.json
